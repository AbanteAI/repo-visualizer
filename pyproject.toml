[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "repo_visualizer"
version = "0.1.0"
description = "A tool for visualizing git repositories as interactive graphs"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    {name = "AbanteAI", email = "info@abante.ai"},
]
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: Scientific/Engineering :: Visualization",
]
dependencies = [
    "pathspec>=0.11.0",
    "requests>=2.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "pyright>=1.1.350",
]
semantic = [
    "openai>=1.0.0",
    "numpy>=1.20.0",
]

[project.scripts]
repo-visualizer = "src.repo_visualizer.cli:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "--cov=src --cov-report=term --cov-fail-under=50"

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "I", "W", "N", "B", "UP", "PT", "RUF"]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.pyright]
include = ["src", "tests"]
typeCheckingMode = "basic"
pythonVersion = "3.8"
reportMissingTypeStubs = false
reportUnknownMemberType = false
reportTypedDictNotRequiredAccess = false
reportGeneralTypeIssues = "none"
reportMissingImports = "none"
